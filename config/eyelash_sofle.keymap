#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 25   // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    acceleration-exponent = <1>;      // 0
    time-to-max-speed-ms = <100>;       // 300
    delay-ms = <0>;                   // 0
};

&mmv {
    time-to-max-speed-ms = <500>;
    acceleration-exponent = <1>;
    trigger-period-ms = <16>;
};

/ {
    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <100>;
    };

    combos {
        compatible = "zmk,combos";

        CtrlAltDel {
            bindings = <&kp LA(LC(DEL))>;
            key-positions = <53 55 12>;
        };

        CtrlBreak {
            bindings = <&kp LC(PAUSE_BREAK)>;
            key-positions = <59 51>;
        };

        HomePC {
            bindings = <&HomePC>;
            key-positions = <59 8>;
        };

        WorkPC {
            bindings = <&WorkPC>;
            key-positions = <59 9>;
        };

        ClearBluetooth {
            bindings = <&bt BT_CLR>;
            key-positions = <59 10>;
        };

        Delete {
            bindings = <&kp DEL>;
            key-positions = <51 12>;
        };

        GameMode {
            bindings = <&none>;
            key-positions = <59 7>;
        };
    };

    macros {
        HomePC: HomePC {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&bt BT_SEL 0 &rgb_ug RGB_COLOR_HSB(206,95,57) &to 0>;
            label = "HOMEPC";
        };

        WorkPC: WorkPC {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&bt BT_SEL 1 &rgb_ug RGB_COLOR_HSB(278,93,56) &to 0>;
            label = "WORKPC";
        };

        GameMode: GameMode {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&GameMode &rgb_ug RGB_COLOR_HSB(29,99,38) &to 2>;
            label = "GAMEMODE";
        };
    };

    behaviors {
    };

    keymap {
        compatible = "zmk,keymap";

        Primary {
            bindings = <
&kp ESC    &kp N1     &kp N2        &kp N3    &kp N4     &kp N5    &kp UP_ARROW     &kp N6  &kp N7     &kp N8     &kp N9    &kp N0     &kp BSPC
&kp GRAVE  &kp Q      &kp W         &kp E     &kp R      &kp T     &kp DOWN_ARROW   &kp Y   &kp U      &kp I      &kp O     &kp P      &kp BSLH
&kp TAB    &kp A      &kp S         &kp D     &kp F      &kp G     &kp LEFT_ARROW   &kp H   &kp J      &kp K      &kp L     &kp SEMI   &kp SQT
&kp LSHFT  &kp Z      &kp X         &kp C     &kp V      &kp B     &kp RIGHT_ARROW  &kp N   &kp M      &kp COMMA  &kp DOT   &kp FSLH   &kp RSHIFT
&none      &kp LCTRL  &kp LEFT_GUI  &kp LALT  &kp ENTER  &mo 1     &kp K_MUTE       &mo 2   &kp SPACE  &kp LBKT   &kp RBKT  &kp RCTRL
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
            display-name = "Primary";
        };

        Lower {
            bindings = <
&rgb_ug RGB_TOG  &kp F1  &kp F2   &kp F3      &kp F4      &trans         &trans  &trans  &trans  &trans      &trans     &trans       &soft_off
&rgb_ug RGB_EFF  &kp F5  &kp F6   &kp F7      &kp F8      &kp PG_UP      &trans  &trans  &trans  &trans      &trans     &trans       &trans
&rgb_ug RGB_EFF  &kp F9  &kp F10  &kp F11     &kp F12     &kp PG_DN      &trans  &trans  &trans  &trans      &trans     &trans       &trans
&trans           &trans  &trans   &kp LS(F3)  &kp LC(F3)  &bootloader    &trans  &trans  &trans  &sys_reset  &soft_off  &bootloader  &trans
&trans           &trans  &trans   &trans      &trans      &trans         &trans  &trans  &trans  &trans      &trans     &trans
            >;

            display-name = "Lower";
            sensor-bindings = <&scroll_encoder>;
        };

        Upper {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &none      &none      &none       &none       &none     &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &kp PG_UP  &kp EQUAL  &kp UP      &kp MINUS   &kp HOME  &kp SCROLLLOCK
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &kp PG_DN  &kp LEFT   &kp DOWN    &kp RIGHT   &kp END   &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans     &trans     &kp LS(LT)  &kp LS(GT)  &trans    &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans     &trans     &trans      &trans      &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
            label = "Upper";
        };

        Game {
            display-name = "Gaming";
            bindings = <
&kp ESC    &kp N1     &kp N2        &kp N3    &kp N4     &kp N5    &kp UP_ARROW     &kp N6  &kp N7     &kp N8     &kp N9    &kp N0     &kp BSPC
&kp GRAVE  &kp Q      &kp W         &kp E     &kp R      &kp T     &kp DOWN_ARROW   &kp Y   &kp U      &kp I      &kp O     &kp P      &kp BSLH
&kp TAB    &kp A      &kp S         &kp D     &kp F      &kp G     &kp LEFT_ARROW   &kp H   &kp J      &kp K      &kp L     &kp SEMI   &kp SQT
&kp LSHFT  &kp Z      &kp X         &kp C     &kp V      &kp B     &kp RIGHT_ARROW  &kp N   &kp M      &kp COMMA  &kp DOT   &kp FSLH   &kp RSHIFT
&none      &kp LCTRL  &kp LEFT_GUI  &kp LALT  &kp SPACE  &mo 1     &kp K_MUTE       &mo 2   &kp SPACE  &kp LBKT   &kp RBKT  &kp RCTRL
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };
    };
};
